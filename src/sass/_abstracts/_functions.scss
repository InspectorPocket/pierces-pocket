@function strip-units($value) {
	@return ($value / ($value * 0 + 1));
}
//Set font size as pixels and rems {px}
@function rem($pxval) {
	@if not unitless($pxval) {
		$pxval: strip-units($pxval);
	}
	$base: 16;
	@if not unitless($base) {
		$base: strip-units($base);
	}
	@return ($pxval / $base) * 1rem;
}

// converter rgba(r, g, b, a) color to #HEX string without alpha channel,
// with optional applying afterwards opacity ($opacity)
// by default alpha channel for rgba-color is applying against white background,
// but you can change it by setting third argumnet ($background)
@function rgba-to-rgb($rgba, $opacity: 0, $background: #fff) {
	@if $opacity > 0 {
		@if $opacity < 1 {
			$opacity: $opacity * 100
		}
	  	@return mix(mix(rgb(red($rgba), green($rgba), blue($rgba)), $background, alpha($rgba) * 100%), rgb(255,255,255), $opacity)
	}
	@return mix(rgb(red($rgba), green($rgba), blue($rgba)), $background, alpha($rgba) * 100%);
}
// by this function you can calc next color composition to real colors:
// opacity: 0.12;
// background-color: rgba(0, 0, 0, 0.87);

// EXAMPLE {
// 	$rgba-color: rgba(0, 0, 0, .87) ;
// 	color: rgba-to-rgb($rgba-color); // #212121
// 	// applying 12% opacity to that color
// 	background-color: rgba-to-rgb($rgba-color, 12); //E4E4E4 
// 	// is also possible to use .12
// 	background-color: rgba-to-rgb($rgba-color, .12); //E4E4E4 
// }